# This is a basic workflow to help you get started with Actions

name: LilyPond Render Music

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Configure Git
        if: github.event.head_commit.message != 'Automated commit from GitHub Actions'

        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'



      - name: Run Super-Linter
        if: github.event.head_commit.message != 'Automated commit from GitHub Actions'
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: main

      - name: Update package list
        if: github.event.head_commit.message != 'Automated commit from GitHub Actions'
        run: sudo apt-get update

      - name: Install LilyPond
        if: github.event.head_commit.message != 'Automated commit from GitHub Actions'
        run: sudo apt-get install lilypond

      - name: Compile LilyPond
        if: github.event.head_commit.message != 'Automated commit from GitHub Actions'
        working-directory: ${{ github.workspace }}
        run: |
          mkdir -p songs_generated
          cd src
          find . -type f -name "*.ly" -print0 | while IFS= read -r -d '' file; do
            echo "$file"
            # Get the relative path of the file from src/
            relative_path=$(dirname "$file")
            # Create the corresponding directory structure in songs_generated/
            mkdir -p "../songs_generated/$relative_path"
            # Generate LilyPond files in the corresponding directory
            lilypond -o "../songs_generated/$relative_path" "$file"
            cp "$file" "../songs_generated/$relative_path/$file"
          done

      - name: Pull Docker Image
        if: github.event.head_commit.message != 'Automated commit from GitHub Actions'
        run: | 
           docker pull leitheiserhannah/happy-pony-synth:latest

      - name: Run Docker container
        if: github.event.head_commit.message != 'Automated commit from GitHub Actions'
        working-directory: ${{ github.workspace }}
        run: |
           cd songs_generated
           find . -type f -name "*.midi" -print0 | while IFS= read -r -d '' file; do
             echo "$file"
             # Get the relative path of the file from src/
             relative_path=$(dirname "$file")
             echo "${relative_path}" 
             file_shorter="${file#./}"
             lilypond=${file_shorter::-4}ly
             echo docker run --rm -v "$(pwd)":/songs_generated "leitheiserhannah/happy-pony-synth:latest" "/songs_generated/${file_shorter}" "/songs_generated/${lilypond}"
             docker run --rm -v "$(pwd)":/songs_generated "leitheiserhannah/happy-pony-synth:latest" "/songs_generated/${file_shorter}" "/songs_generated/${lilypond}"
           done
          
      - name: Commit and push changes
        if: github.event.head_commit.message != 'Automated commit from GitHub Actions'
        run: |
          git add songs_generated
          git commit -m "Automated commit from GitHub Actions"
          git push
